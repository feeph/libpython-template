# quickstart:
#   pdm install
#   pdm run pytest

# dependencies
#   - use `pdm add <package>` and `pdm remove <package>` to manage dependencies
#   - use `pdm add -d -G dev <packag>` to add a dev dependency
#   - use `pdm update --update-all` to update dependencies
#   - use `pdm install` to install dependencies

# usage:
#   - use `pdm run <pythonfile>` to execute code
#   - use `pdm run pytest` to perform unit tests

# line lengths:
#   - Excessive line lengths aren't good. But rather then automatically
#     breaking them and turning into vertical blocks we want to see the
#     nastiness sticking out prominently.

[project]
name = "{{ package_namespace }}.{{ package_name }}"
version = "0.0.0"
description = "{{ package_description }}"
authors = [
    {name = "{{ author_name }}", email = "{{ author_email }}"},
]
requires-python = "{{ python_constraint }}"
dependencies = [
]
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
repository = "{{ repository_url }}/"
keywords = [
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Hardware",
    "Typing :: Typed",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

# -------------------------------------------------------------------------
# tooling
# -------------------------------------------------------------------------

# https://github.com/PyCQA/isort
# https://pycqa.github.io/isort/
[tool.isort]
# use the black profile but override "multi_line_output"
profile           = "black"
line_length       = {{ max_line_length }}
multi_line_output = 7
src_paths         = ["{{ package_namespace }}/", "tests/"]

# https://pypi.org/project/autopep8/
[tool.autopep8]
max_line_length = {{ max_line_length }}
ignore          = ["E221", "E241"]
in-place = true

[tool.pdm]
distribution = true

# automatically update requirements.txt and requirements-dev.txt
# on `pdm lock`

[[tool.pdm.autoexport]]
filename = "requirements.txt"
groups = ["default"]

[[tool.pdm.autoexport]]
filename = "requirements-dev.txt"
groups = ["dev", "tools"]

[tool.pdm.build]
includes = ["{{ package_namespace }}/"]
source-includes = ["tests/"]

[tool.pdm.dev-dependencies]
dev = [
]
tools = [
    "autopep8     ~= 2.2",
    "copier       ~= 9.3",
    "flake8       ~= 7.0",
    "mypy         ~= 1.10",
    "pylint       ~= 3.2",
    "pytest-cov   ~= 5.0",
    "pytest-sugar ~= 1.0",
]

# during development: fetch all packages in our namespace from TestPyPI
#
# this config is used exclusively by pdm and has no impact on regular
# consumers using `pip install <package>` to install the package
[[tool.pdm.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
include_packages = ["{{ package_namespace }}-*"]

[tool.pylint."MESSAGES CONTROL"]
fail-under = 8
max-line-length = {{ max_line_length }}
disable = "no-else-return,use-list-literal"
